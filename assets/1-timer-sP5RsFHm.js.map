{"version":3,"file":"1-timer-sP5RsFHm.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["const input = document.querySelector('#datetime-picker');\n\nconst timer = document.querySelector('.timer');\nconst startBtn = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\nstartBtn.disabled = true;\n\n// Стилі для відображення таймера на сторінці\ntimer.style.display = 'flex';\ntimer.style.gap = '15px';\ntimer.style.marginTop = '20px';\nconst fields = document.querySelectorAll('.field');\n\nfields.forEach(field => {\n  field.style.display = 'flex';\n  field.style.flexDirection = 'column';\n  field.style.alignItems = 'center';\n});\nconst values = document.querySelectorAll('.value');\n\nvalues.forEach(value => {\n  value.style.fontSize = '30px';\n});\nconst label = document.querySelectorAll('.label');\nlabel.forEach(lab => {\n  lab.style.fontSize = '12px';\n});\n\n// тепер бібліотека (скопіювала з домашки)\n// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// додаю бібліотеку для alert-ів...\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// ініціалізую бубліотеку на #datetime-picker; options взяла з домашки...\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        // title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n});\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\n// чіпляю слухача на кнопку\nstartBtn.addEventListener('click', startTimerCont);\n\nfunction startTimerCont() {\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const timeRemaining = userSelectedDate - now;\n\n    if (timeRemaining <= 0) {\n      clearInterval(countdownInterval);\n      daysSpan.textContent = '00';\n      hoursSpan.textContent = '00';\n      minutesSpan.textContent = '00';\n      secondsSpan.textContent = '00';\n\n      input.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n\n    daysSpan.textContent = addZerroToTimer(days);\n    hoursSpan.textContent = addZerroToTimer(hours);\n    minutesSpan.textContent = addZerroToTimer(minutes);\n    secondsSpan.textContent = addZerroToTimer(seconds);\n  }, 1000);\n}\n\n// функція обробки часу із домашки:\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nfunction addZerroToTimer(time) {\n  return String(time).padStart(2, '0');\n}\n"],"names":["input","timer","startBtn","daysSpan","hoursSpan","minutesSpan","secondsSpan","fields","field","values","value","label","lab","flatpickr","selectedDates","selectedDate","iziToast","userSelectedDate","countdownInterval","startTimerCont","timeRemaining","days","hours","minutes","seconds","convertMs","addZerroToTimer","ms","time"],"mappings":"svBAAA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EAEjDC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC3DJ,EAAS,SAAW,GAGpBD,EAAM,MAAM,QAAU,OACtBA,EAAM,MAAM,IAAM,OAClBA,EAAM,MAAM,UAAY,OACxB,MAAMM,EAAS,SAAS,iBAAiB,QAAQ,EAEjDA,EAAO,QAAQC,GAAS,CACtBA,EAAM,MAAM,QAAU,OACtBA,EAAM,MAAM,cAAgB,SAC5BA,EAAM,MAAM,WAAa,QAC3B,CAAC,EACD,MAAMC,EAAS,SAAS,iBAAiB,QAAQ,EAEjDA,EAAO,QAAQC,GAAS,CACtBA,EAAM,MAAM,SAAW,MACzB,CAAC,EACD,MAAMC,EAAQ,SAAS,iBAAiB,QAAQ,EAChDA,EAAM,QAAQC,GAAO,CACnBA,EAAI,MAAM,SAAW,MACvB,CAAC,EAeDC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5B,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CAEb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDd,EAAS,SAAW,KAEpBe,EAAmBF,EACnBb,EAAS,SAAW,GAEvB,CACH,CAAC,EACD,IAAIe,EAAmB,KACnBC,EAAoB,KAGxBhB,EAAS,iBAAiB,QAASiB,CAAc,EAEjD,SAASA,GAAiB,CACxBjB,EAAS,SAAW,GACpBF,EAAM,SAAW,GAEjBkB,EAAoB,YAAY,IAAM,CAEpC,MAAME,EAAgBH,EADV,IAAI,KAGhB,GAAIG,GAAiB,EAAG,CACtB,cAAcF,CAAiB,EAC/Bf,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAE1BN,EAAM,SAAW,GACjB,MACD,CAED,KAAM,CAAE,KAAAqB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAa,EAEjEjB,EAAS,YAAcuB,EAAgBL,CAAI,EAC3CjB,EAAU,YAAcsB,EAAgBJ,CAAK,EAC7CjB,EAAY,YAAcqB,EAAgBH,CAAO,EACjDjB,EAAY,YAAcoB,EAAgBF,CAAO,CAClD,EAAE,GAAI,CACT,CAGA,SAASC,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIC,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/B,SAASC,EAAgBE,EAAM,CAC7B,OAAO,OAAOA,CAAI,EAAE,SAAS,EAAG,GAAG,CACrC"}